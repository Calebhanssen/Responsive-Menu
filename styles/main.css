:root {
  --text-color: #333;
  --floral-white: #f5f1e8;
  --roman-back: #333;

  /* added this because it was referenced in hero overlay but didn't exist... */
  --overlay-background-color: rgba(0, 0, 0, 0.3);
  --medium-font-size: 1.5rem;
}

* {
  box-sizing: border-box;
}

p {
  margin: 1.2rem 0 1rem;
  line-height: 1.3;
}

a {
  text-decoration: none;
}

img {
  width: 100%;
  display: block;
}

main {
  max-width: 50rem;
  align-self: center;
  margin: 0 2rem;
  padding: 0rem;
}

body.body main {
  max-width: 70rem;
}

body {
  display: flex;
  flex-direction: column;
  font-family: "Cabin", sans-serif;
  background-color: #fff;
  color: #333;
}

.hidden {
  display: none;
}

.main-menu {
  position: relative;
  order: -1;
}

.main-menu .menu-icon {
  position: fixed;
  top: 0.2rem;
  left: 0.2rem;
  width: 55px;
  height: 30px;
  background-color: #e6dedb;
  border-radius: 10%;
  z-index: 2;

  display: flex;
  align-items: center;
  justify-content: center;
}

.main-menu svg {
  stroke: #333;
  stroke-width: 4px;
  stroke-linecap: round;
  padding: 8px;
}

.main-menu svg line {
  transform-origin: center;
  transition: transform 200ms ease;
}

.main-menu svg line:first-child {
  transform: translateY(8px);
}

.main-menu svg line:last-child {
  transform: translateY(-8px);
}

.menu-show .menu-icon {
  background-color: #ffffff;
}

.menu-show svg line {
  stroke: #333;
  stroke-width: 5px;
}

.menu-show svg line:first-child {
  transform: scale(100px);
}

.menu-show svg line:last-child {
  transform: scale(100px);
}

.main-menu nav {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  margin: 0;
  background-color: #e6dedb;
  z-index: 1;

  transition: transform 400ms ease;
  transform: translateX(-500px);
}

.main-menu.menu-show nav {
  transform: translateX(0);
}

nav ul {
  display: flex;
  flex-direction: column;
  list-style-type: none;

  padding: 0;
  gap: 0.75rem;
  align-items: center;
  margin-top: 9rem;
}

nav a {
  display: block;
  padding: 1rem;
  font-size: 1.4rem;
  color: var(--floral-white);
}

nav a:not([href]) {
  color: var(--roman-silver);
}

h1,
h2,
h3 {
  font-family: "Playfair Display", serif;
  color: #161616;
}

picture img {
  width: 100%;
}

.button {
  background-color: #d8c8c2;
  font-family: "Playfair Display", sans-serif;
  color: #000000;
  border: 0.0625rem solid #6b534b;
  padding: 0.1rem 1rem;
  font-size: 13px;
  font-weight: 600;
  transition: color 426ms cubic-bezier(0.4, 0.9, 0.3, 1),
    border-color 426ms cubic-bezier(0.4, 0.9, 0.3, 1),
    background-color 426ms cubic-bezier(0.4, 0.9, 0.3, 1);
}

.button2 {
  text-transform: uppercase;
  display: inline-flex;
  font-size: small;
  justify-content: center;
  align-items: center;
  text-align: center;
  transition: background-color 300ms, color 500ms;
}

.button:hover {
  background-color: #fff;
  color: #000;
}

.button2:hover {
  color: #fff;
}

/* Hero Image */
.hero {
  position: relative;
  width: 100%;
}

.hero .overlay {
  position: absolute;
  display: flex;
  flex-direction: column;
  align-items: center;
  /* added this to center vertically */
  justify-content: center;
  /* this margin top is causing a gap between the overlay and top of the image */
  /* margin-top: 1rem; */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--overlay-background-color);
  padding: 0.25;
}

.hero h1 {
  /* added dynamic font - min width is 2rem, max width it 6rem, anything in between is
     7% of the viewport width */
  font-size: clamp(2rem, 7vw, 6rem);
  margin: 0;
  text-shadow: 4px 4px 12px rgb(255, 255, 255);
}

.hero p {
  /* increase the font size to make it more readable */
  font-size: clamp(1rem, 4vw, 2rem);
  /*  this line is referencing an undefined variable */
  /* color: var(--background-color); */
  /* I set the color to black for contrast */
  color: rgb(255, 255, 255);
  /* italic isn't very readable, especially with the text shadow */
  /* font-style: italic; */
  font-weight: bold;
  /* reduced the text-shadow because it was blurry */
  text-shadow: 1px 1px 1px rgb(255, 255, 255);
}
/* moved media query that was here to end of files. it was min-width: 501px */

/* panel class for index */
.panel {
  display: flex;
  flex-direction: column;
  /* increase margin top for more whitespace */
  margin-top: 6rem;
}

.panel .image-wrapper {
  order: -1;
  /* set aspect ratio of wrapper to aspect ratio of images */
  aspect-ratio: 6 / 9;
  /* flex: 0 1 35%;  don't need flex on column*/
}

/* .panel .text-wrapper { 
  flex: 1 0 40%; don't need flex on column
} */

.panel img {
  height: 100%;
  /* don't need object-position or fit when aspect ratio of 
     container matches aspect ratio of image */
  /* object-position: cover; */
  /* max-height: 300px; */
  width: 100%;
}

/* Card styles */
.cards {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  margin-top: 6rem;
}

.card {
  position: relative;
  margin-right: 0.5rem;
}

.cards .overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* background-color: var(--overlay-background-color); */
  /* i like the gradient better */
  background: linear-gradient(to top, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.5));

  /* to have the names not disappear, transition the background */
  transition: background 300ms;
}

.cards p {
  color: var(--background-color);
  font-size: var(--medium-font-size);
  text-align: center;
  /* increased margin top  */
  margin: 0.75rem 0.25rem 0;
  color: #fff;
  text-shadow: 2px 2px 4px rgb(0, 0, 0);
  font-weight: bolder;
}

.card:hover .overlay {
  /* opacity: 0; */
  background: transparent;
}

@media (min-width: 501px) {
  /* don't need to redefine this - it was set above */
  /* .cards .overlay {
    background-image: linear-gradient(rgba(0, 0, 0, 0.227), rgba(0, 0, 0, 0.5));
  } */
}

/* this was in the middle of your CSS above. Moved it here. it was messing with overrides */
@media (min-width: 501px) {
  main {
    margin: 0 1.5rem;
  }

  .main-menu {
    order: 0;
  }

  .main-menu .menu-icon {
    display: none;
  }

  .main-menu nav {
    background-color: #e6dedb;
    position: static;
    width: auto;
    height: auto;
    transform: none;
  }

  nav ul {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin: 0 auto;
    padding: 0;
    max-width: 80rem;
    gap: 0;
  }

  nav a {
    display: block;
    padding: 1rem;
    font-size: 1rem;
    color: #333;
  }

  nav a:not([href]) {
    color: var(--roman-black);
  }

  nav a::after {
    content: "";
    display: block;
    width: calc(100% + 12px);
    height: 3px;
    margin-left: -6px;
    margin-top: 6px;
    background-color: #fff;
    transform: scale(0);
    transition: transform 200ms ease-in, color 300ms ease-in;
    transform-origin: right;
  }

  nav a[href]:hover {
    color: #fff;
  }

  nav a[href]:hover::after {
    transform: scale(1);
    transform-origin: left;
  }
}

@media (min-width: 700px) {
  .panel {
    flex-direction: row;
    gap: 2rem;
  }

  /* I increased the font size see not below on p. You can adjust to sizes you'd 
     prefer.  */
  .panel h2 {
    margin: 0;
    font-size: 2.5rem;
  }

  /* because I wanted to focus on the images, I increased the font size to 
     reduce whitespace in the .text-wrapper */
  .panel p {
    font-size: 1.5rem;
  }

  .panel .left {
    order: -2;
  }

  /* on tablet, I set the flex-items to be equal widths - you can change it */
  .panel .text-wrapper {
    flex: 0 1 50%;
  }

  /* set an aspect ratio on the image-wrapper so it has the 
     same aspect ratio of the images */
  .panel .image-wrapper {
    flex: 1 0 50%;
    aspect-ratio: 6 / 9;
  }

  /* have the image fill the image-wrapper. you don't need object-fit 
     because the .image-wrapper has the same aspect ratio as the image */
  .panel img {
    width: 100%;
    height: 100%;

    /* override a max-height set earlier */
    max-height: none;
  }

  .cards {
    flex-direction: row;
    flex-wrap: wrap;
  }

  .cards .card {
    flex: 1 1 35%;
  }
}

@media (min-width: 900px) {
  .cards {
    flex-wrap: nowrap;
  }
  /**************************************************************
    this will make your hero image full screen on laptop. You can 
    adjust the vh if you don't want it full screen
    **************************************************************/
  .hero {
    /* this subtracts the height of the menu (1rem padding top and bottom and
       1rem font size from the vertical height of the
       viewport. it's not 100% exact because it doesn't include line spacing, but 
       it is good enough. Another option would be make the header on this 
       page position: absolute, with top,left, and right set to 0 and a z-index of
       1 -- but it will cover some of the top of the image */
    height: calc(100vh - 3rem);
    height: calc(80vh - 3rem);
  }

  /* size the image to 100% of .hero container and crop with object fit */
  .hero img {
    height: 100%;
    object-fit: cover;
  }

  /* I thought the main needed a bit more with on laptop, so I gave the 
     body on your main index.html a class .main-page */

  .main-page main {
    max-width: 60rem;
  }
}

footer {
  margin: 2rem 0;
  text-align: center;
}

/* loader */
.loader {
  position: absolute;
  top: 80%;
  left: 40%;
  margin-left: 10%;
  transform: translate3d(-50%, -50%, 0);
  animation: loader 3000ms infinite ease-in-out;
}
.dot {
  width: 24px;
  height: 24px;
  background: rgb(22, 48, 117);
  border-radius: 100%;
  display: inline-block;
  animation: slide 1s infinite;
}
.dot:nth-child(1) {
  animation-delay: 0.1s;
  background: #32aacc;
}
.dot:nth-child(2) {
  animation-delay: 0.2s;
  background: #64aacc;
}
.dot:nth-child(3) {
  animation-delay: 0.3s;
  background: #96aacc;
}
.dot:nth-child(4) {
  animation-delay: 0.4s;
  background: #c8aacc;
}
.dot:nth-child(5) {
  animation-delay: 0.5s;
  background: #faaacc;
}
@-moz-keyframes slide {
  0% {
    transform: scale(1);
  }
  50% {
    opacity: 0.3;
    transform: scale(2);
  }
  100% {
    transform: scale(1);
  }
}
@-webkit-keyframes slide {
  0% {
    transform: scale(1);
  }
  50% {
    opacity: 0.3;
    transform: scale(2);
  }
  100% {
    transform: scale(1);
  }
}
@-o-keyframes slide {
  0% {
    transform: scale(1);
  }
  50% {
    opacity: 0.3;
    transform: scale(2);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes slide {
  0% {
    transform: scale(1);
  }
  50% {
    opacity: 0.3;
    transform: scale(2);
  }
  100% {
    transform: scale(1);
  }
}
